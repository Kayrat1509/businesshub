version: '3.8'

services:
  db:
    image: postgres:15
    container_name: b2b_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: b2b_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - b2b_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: b2b_backend
    restart: unless-stopped
    env_file:
      - backend/.env
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - b2b_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: b2b_frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    env_file:
      - backend/.env
    networks:
      - b2b_network
    command: npm run dev

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: b2b_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - b2b_network

  nginx:
    image: nginx:alpine
    container_name: b2b_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - backend
      - frontend
    networks:
      - b2b_network

volumes:
  postgres_data:
  media_volume:

networks:
  b2b_network:
    driver: bridge