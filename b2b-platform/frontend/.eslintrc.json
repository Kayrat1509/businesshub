{
  "root": true,
  "env": {
    "browser": true,
    "es2020": true,
    "node": true
  },
  "extends": [
    "eslint:recommended"
  ],
  "ignorePatterns": [
    "dist",
    ".eslintrc.json",
    "node_modules",
    "vite.config.ts"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "react-refresh",
    "react-hooks",
    "@typescript-eslint"
  ],
  "rules": {
    // React Refresh rules
    "react-refresh/only-export-components": [
      "warn",
      { "allowConstantExport": true }
    ],
    
    // React Hooks rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    
    // TypeScript rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-inferrable-types": "warn",
    "@typescript-eslint/ban-ts-comment": "warn",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    
    // Disable conflicting ESLint rules and use TypeScript versions
    "no-unused-vars": "off",
    "no-undef": "off",
    
    // General ESLint rules
    "no-console": "warn",
    "no-debugger": "error",
    "no-duplicate-imports": "error",
    "no-unused-expressions": "error",
    "prefer-const": "error",
    "no-var": "error",
    
    // Code style preferences
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"],
    "brace-style": ["error", "1tbs"],
    "comma-dangle": ["warn", "always-multiline"],
    "quotes": ["warn", "single", { "avoidEscape": true }],
    "semi": ["warn", "always"],
    
    // Best practices
    "no-magic-numbers": [
      "warn",
      {
        "ignore": [-1, 0, 1, 2],
        "ignoreArrayIndexes": true,
        "enforceConst": true
      }
    ],
    "prefer-template": "error",
    "object-shorthand": "error"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}