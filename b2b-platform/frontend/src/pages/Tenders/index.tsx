import { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { useAppDispatch, useAppSelector } from '../../store/hooks';
import { fetchTenders } from '../../store/slices/tendersSlice';
import TenderCard from '../../components/TenderCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import { Tender } from '../../types';

const Tenders = () => {
  const dispatch = useAppDispatch();
  const { tenders, isLoading } = useAppSelector(state => state.tenders);

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const [selectedCity, setSelectedCity] = useState<string>('');
  const [selectedCurrency, setSelectedCurrency] = useState<string>('KZT');
  const [searchInTitles, setSearchInTitles] = useState<string>('all'); // –¥–ª—è –∞–Ω–∞–ª–æ–≥–∏–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏
  const [sortOrder, setSortOrder] = useState<string>('');

  useEffect(() => {
    dispatch(fetchTenders({ page: 1, filters: { status: 'APPROVED' } }));
  }, [dispatch]);

  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Ç–µ–Ω–¥–µ—Ä–æ–≤
  const cities = [...new Set(tenders.map(tender => tender.city).filter(Boolean))].sort();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –±—é–¥–∂–µ—Ç–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ
  const getDisplayBudget = (tender: Tender) => {
    // –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–Ω–≥–µ (—Å–∫–æ–ª—å–∫–æ KZT –∑–∞ 1 –µ–¥–∏–Ω–∏—Ü—É –≤–∞–ª—é—Ç—ã)
    const exchangeRates = {
      KZT: 1,      // –±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ - –∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ
      USD: 450,    // 1 USD = 450 KZT
      RUB: 5.0     // 1 RUB = 5.0 KZT
    };

    const convertPrice = (price: number, fromCurrency: string, toCurrency: string) => {
      if (fromCurrency === toCurrency) return price;

      // –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –¥–ª—è –∏—Å—Ö–æ–¥–Ω–æ–π –∏ —Ü–µ–ª–µ–≤–æ–π –≤–∞–ª—é—Ç
      const fromRate = exchangeRates[fromCurrency as keyof typeof exchangeRates];
      const toRate = exchangeRates[toCurrency as keyof typeof exchangeRates];

      // –ï—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∫—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Ü–µ–Ω—É
      if (!fromRate || !toRate) return price;

      // –°–Ω–∞—á–∞–ª–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –≤–∞–ª—é—Ç—É –≤ —Ç–µ–Ω–≥–µ
      const priceInKZT = price * fromRate;
      // –ó–∞—Ç–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ —Ç–µ–Ω–≥–µ –≤ —Ü–µ–ª–µ–≤—É—é –≤–∞–ª—é—Ç—É
      const priceInTargetCurrency = priceInKZT / toRate;

      return priceInTargetCurrency;
    };

    const budgetMin = tender.budget_min ? convertPrice(tender.budget_min, tender.currency, selectedCurrency) : null;
    const budgetMax = tender.budget_max ? convertPrice(tender.budget_max, tender.currency, selectedCurrency) : null;

    return { budgetMin, budgetMax };
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Ç–µ–Ω–¥–µ—Ä–æ–≤
  const applyFiltersAndSort = (tendersList: Tender[]): Tender[] => {
    let filtered = [...tendersList];

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≥–æ—Ä–æ–¥—É
    if (selectedCity) {
      filtered = filtered.filter(tender => tender.city === selectedCity);
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É –ø–æ–∫–∞–∑–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤
    if (searchInTitles === 'with_deadline') {
      filtered = filtered.filter(tender => tender.deadline_date);
    } else if (searchInTitles === 'with_budget') {
      filtered = filtered.filter(tender => tender.budget_min || tender.budget_max);
    }

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    if (sortOrder === 'budget_asc') {
      filtered.sort((a, b) => {
        const { budgetMin: minA } = getDisplayBudget(a);
        const { budgetMin: minB } = getDisplayBudget(b);
        const avgA = minA || 0;
        const avgB = minB || 0;
        return avgA - avgB;
      });
    } else if (sortOrder === 'budget_desc') {
      filtered.sort((a, b) => {
        const { budgetMin: minA } = getDisplayBudget(a);
        const { budgetMin: minB } = getDisplayBudget(b);
        const avgA = minA || 0;
        const avgB = minB || 0;
        return avgB - avgA;
      });
    } else if (sortOrder === 'date_desc') {
      filtered.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());
    } else if (sortOrder === 'deadline_asc') {
      filtered.sort((a, b) => {
        if (!a.deadline_date && !b.deadline_date) return 0;
        if (!a.deadline_date) return 1;
        if (!b.deadline_date) return -1;
        return new Date(a.deadline_date).getTime() - new Date(b.deadline_date).getTime();
      });
    }

    return filtered;
  };

  const filteredTenders = applyFiltersAndSort(tenders);

  return (
    <div className="container mx-auto px-4 py-8">
      {/* Page Header */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        className="mb-8 text-center"
      >
        <h1 className="text-4xl font-bold text-white mb-4">–¢–µ–Ω–¥–µ—Ä—ã</h1>
        <p className="text-xl text-dark-300 max-w-2xl mx-auto">
          –ú–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏—â—É—Ç –¥–ª—è —Å–≤–æ–∏—Ö –Ω—É–∂–¥
        </p>
      </motion.div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
      {tenders.length > 0 && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
          className="mb-8"
        >
          <div className="flex flex-col sm:flex-row gap-4 mb-6 p-4 bg-dark-700/50 rounded-lg">
            {/* –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É */}
            <div className="flex-1">
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É:
              </label>
              <select
                value={selectedCity}
                onChange={(e) => setSelectedCity(e.target.value)}
                className="w-full px-3 py-2 bg-dark-600 border border-dark-500 rounded-md text-white focus:ring-2 focus:ring-primary-500 focus:border-transparent"
              >
                <option value="">–í—Å–µ –≥–æ—Ä–æ–¥–∞</option>
                {cities.map((city) => (
                  <option key={city} value={city}>
                    {city}
                  </option>
                ))}
              </select>
            </div>

            {/* –í–∞–ª—é—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
            <div className="flex-1">
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –í–∞–ª—é—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:
              </label>
              <select
                value={selectedCurrency}
                onChange={(e) => setSelectedCurrency(e.target.value)}
                className="w-full px-3 py-2 bg-dark-600 border border-dark-500 rounded-md text-white focus:ring-2 focus:ring-primary-500 focus:border-transparent"
              >
                <option value="KZT">–¢–µ–Ω–≥–µ (KZT)</option>
                <option value="RUB">–†—É–±–ª–∏ (RUB)</option>
                <option value="USD">–î–æ–ª–ª–∞—Ä—ã (USD)</option>
              </select>
            </div>

            {/* –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–æ–≤) */}
            <div className="flex-1">
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–Ω–¥–µ—Ä—ã:
              </label>
              <select
                value={searchInTitles}
                onChange={(e) => setSearchInTitles(e.target.value)}
                className="w-full px-3 py-2 bg-dark-600 border border-dark-500 rounded-md text-white focus:ring-2 focus:ring-primary-500 focus:border-transparent"
              >
                <option value="all">–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ</option>
                <option value="with_deadline">–° —É–∫–∞–∑–∞–Ω–Ω—ã–º –¥–µ–¥–ª–∞–π–Ω–æ–º</option>
                <option value="with_budget">–° —É–∫–∞–∑–∞–Ω–Ω—ã–º –±—é–¥–∂–µ—Ç–æ–º</option>
              </select>
            </div>

            {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
            <div className="flex-1">
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:
              </label>
              <select
                value={sortOrder}
                onChange={(e) => setSortOrder(e.target.value)}
                className="w-full px-3 py-2 bg-dark-600 border border-dark-500 rounded-md text-white focus:ring-2 focus:ring-primary-500 focus:border-transparent"
              >
                <option value="">–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</option>
                <option value="date_desc">–°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ</option>
                <option value="budget_asc">–ë—é–¥–∂–µ—Ç: –æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É</option>
                <option value="budget_desc">–ë—é–¥–∂–µ—Ç: –æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É</option>
                <option value="deadline_asc">–ü–æ –¥–µ–¥–ª–∞–π–Ω—É</option>
              </select>
            </div>

            {/* –°—á—ë—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
            <div className="flex items-end">
              <div className="text-sm text-dark-400">
                –ü–æ–∫–∞–∑–∞–Ω–æ: <span className="text-primary-400 font-semibold">{filteredTenders.length}</span> –∏–∑ <span className="text-white">{tenders.length}</span> —Ç–µ–Ω–¥–µ—Ä–æ–≤
              </div>
            </div>
          </div>
        </motion.div>
      )}

      {/* Tenders List */}
      {isLoading ? (
        <div className="flex justify-center py-12">
          <LoadingSpinner />
        </div>
      ) : filteredTenders.length === 0 ? (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="text-center py-12"
        >
          <div className="text-6xl mb-4">üìã</div>
          <h3 className="text-xl font-semibold text-white mb-2">
            {selectedCity ? '–ù–µ—Ç —Ç–µ–Ω–¥–µ—Ä–æ–≤ –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ' : '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ–Ω–¥–µ—Ä–æ–≤'}
          </h3>
          <p className="text-dark-300">
            {selectedCity ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' : '–ù–æ–≤—ã–µ —Ç–µ–Ω–¥–µ—Ä—ã –ø–æ—è–≤—è—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è'}
          </p>
        </motion.div>
      ) : (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.8, delay: 0.4 }}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
        >
          {filteredTenders.map((tender, index) => {
            // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±—é–¥–∂–µ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ–Ω–¥–µ—Ä–∞
            const { budgetMin, budgetMax } = getDisplayBudget(tender);

            return (
              <motion.div
                key={tender.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
              >
                <TenderCard
                  tender={tender}
                  displayCurrency={selectedCurrency}
                  convertedBudgetMin={budgetMin}
                  convertedBudgetMax={budgetMax}
                />
              </motion.div>
            );
          })}
        </motion.div>
      )}

      {/* Statistics */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        className="mt-16 text-center"
      >
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 max-w-4xl mx-auto">
          <div className="text-center">
            <div className="text-3xl font-bold text-primary-400 mb-2">{filteredTenders.length}</div>
            <div className="text-dark-300">–ü–æ–∫–∞–∑–∞–Ω–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤</div>
          </div>
          <div className="text-center">
            <div className="text-3xl font-bold text-secondary-400 mb-2">{tenders.length}</div>
            <div className="text-dark-300">–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö</div>
          </div>
          <div className="text-center">
            <div className="text-3xl font-bold text-yellow-400 mb-2">{cities.length}</div>
            <div className="text-dark-300">–ì–æ—Ä–æ–¥–æ–≤</div>
          </div>
          <div className="text-center">
            <div className="text-3xl font-bold text-green-400 mb-2">24/7</div>
            <div className="text-dark-300">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</div>
          </div>
        </div>
      </motion.div>
    </div>
  );
};

export default Tenders;