import React, { useState, useEffect, useCallback, useMemo } from 'react';
import { motion } from 'framer-motion';
import { MapPin, Package, Tag, ChevronRight, Search, Filter, X, ArrowUpDown } from 'lucide-react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'react-hot-toast';
import apiService from '../api';
import LoadingSpinner from '../components/LoadingSpinner';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
interface Product {
  id: number;
  title: string;
  description: string;
  price: number;
  currency: string;
  image: string;
  company_name: string;
  company_city: string;
  company_country: string;
  category?: {
    name: string;
  };
  on_sale: boolean;
}

interface ProductsResponse {
  results: Product[];
  count: number;
}

interface FilterOptions {
  categories: Array<{
    id: number;
    name: string;
    slug: string;
  }>;
  cities: string[];
  countries: string[];
}

interface Filters {
  search: string;
  category: string;
  city: string;
  country: string;
  ordering: string;
}

const Actions: React.FC = () => {
  const [saleProducts, setSaleProducts] = useState<Product[]>([]);
  const [filterOptions, setFilterOptions] = useState<FilterOptions>({
    categories: [],
    cities: [],
    countries: []
  });
  const [filters, setFilters] = useState<Filters>({
    search: '',
    category: '',
    city: '',
    country: '',
    ordering: '-created_at'
  });
  const [loading, setLoading] = useState(true);
  const [isInitialized, setIsInitialized] = useState(false);
  const navigate = useNavigate();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–ø—Ü–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const fetchFilterOptions = useCallback(async () => {
    try {
      const response = await apiService.get<FilterOptions>('/products/filter-options/');
      setFilterOptions(response);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ü–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤:', error);
    }
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const fetchSaleProducts = useCallback(async (currentFilters: Filters) => {
    try {
      const params: any = {
        on_sale: true,
        page_size: 50
      };

      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–¥–∞–Ω—ã
      if (currentFilters.search.trim()) params.search = currentFilters.search.trim();
      if (currentFilters.category) params.category = currentFilters.category;
      if (currentFilters.city) params.city = currentFilters.city;
      if (currentFilters.country) params.country = currentFilters.country;
      if (currentFilters.ordering) params.ordering = currentFilters.ordering;

      console.log('API call with params:', params); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('Full API URL would be:', '/products/', params); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

      const response = await apiService.get<ProductsResponse>('/products/', { params });
      console.log('API response:', response); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
      setSaleProducts(response.results);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π:', error);
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π');
    }
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const loadInitialData = async () => {
      setLoading(true);
      try {
        await fetchFilterOptions();
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
        await fetchSaleProducts({
          search: '',
          category: '',
          city: '',
          country: '',
          ordering: '-created_at'
        });
        setIsInitialized(true);
      } finally {
        setLoading(false);
      }
    };

    loadInitialData();
  }, []); // –¢–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (—Å –¥–µ–±–∞—É–Ω—Å–æ–º –¥–ª—è –ø–æ–∏—Å–∫–∞)
  useEffect(() => {
    if (!isInitialized) return; // –ù–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏

    const timeoutId = setTimeout(() => {
      console.log('Filter changed, fetching products...', filters); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
      fetchSaleProducts(filters);
    }, filters.search.trim() ? 300 : 0); // 300–º—Å –¥–µ–±–∞—É–Ω—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–∏—Å–∫–∞

    return () => clearTimeout(timeoutId);
  }, [filters, fetchSaleProducts, isInitialized]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ç–æ–≤–∞—Ä—É
  const handleProductClick = (productId: number) => {
    navigate(`/product/${productId}`);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFilterChange = (key: keyof Filters, value: string) => {
    console.log('Filter change:', key, '=', value); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    setFilters(prev => {
      const newFilters = {
        ...prev,
        [key]: value
      };
      console.log('New filters state:', newFilters); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
      return newFilters;
    });
  };

  // –°–±—Ä–æ—Å –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleResetFilters = () => {
    setFilters({
      search: '',
      category: '',
      city: '',
      country: '',
      ordering: '-created_at'
    });
  };

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <LoadingSpinner />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-dark-900 py-12">
      <div className="container mx-auto px-6">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-12"
        >
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
            üî• –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏
          </h1>
          <p className="text-xl text-dark-300 max-w-2xl mx-auto">
            –í—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –Ω–∞—à–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏
          </p>
        </motion.div>

        {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          className="bg-dark-800 rounded-2xl p-6 mb-8"
        >
          {/* –°—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ */}
          <div className="mb-6">
            <div className="relative max-w-md">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-dark-400 w-5 h-5" />
              <input
                type="text"
                value={filters.search}
                onChange={(e) => handleFilterChange('search', e.target.value)}
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é..."
                className="w-full pl-10 pr-4 py-3 bg-dark-700 border border-dark-600 rounded-xl text-white placeholder-dark-400 focus:border-primary-500 focus:ring-1 focus:ring-primary-500 transition-colors"
              />
            </div>
          </div>

          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4">
            {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
            <div>
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –ö–∞—Ç–µ–≥–æ—Ä–∏—è
              </label>
              <select
                value={filters.category}
                onChange={(e) => handleFilterChange('category', e.target.value)}
                className="w-full px-3 py-2 bg-dark-700 border border-dark-600 rounded-lg text-white focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
              >
                <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                {filterOptions.categories.map((category) => (
                  <option key={category.id} value={category.slug}>
                    {category.name}
                  </option>
                ))}
              </select>
            </div>

            {/* –ì–æ—Ä–æ–¥ */}
            <div>
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –ì–æ—Ä–æ–¥
              </label>
              <select
                value={filters.city}
                onChange={(e) => handleFilterChange('city', e.target.value)}
                className="w-full px-3 py-2 bg-dark-700 border border-dark-600 rounded-lg text-white focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
              >
                <option value="">–í—Å–µ –≥–æ—Ä–æ–¥–∞</option>
                {filterOptions.cities.map((city) => (
                  <option key={city} value={city}>
                    {city}
                  </option>
                ))}
              </select>
            </div>

            {/* –°—Ç—Ä–∞–Ω–∞ */}
            <div>
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –°—Ç—Ä–∞–Ω–∞
              </label>
              <select
                value={filters.country}
                onChange={(e) => handleFilterChange('country', e.target.value)}
                className="w-full px-3 py-2 bg-dark-700 border border-dark-600 rounded-lg text-white focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
              >
                <option value="">–í—Å–µ —Å—Ç—Ä–∞–Ω—ã</option>
                {filterOptions.countries.map((country) => (
                  <option key={country} value={country}>
                    {country}
                  </option>
                ))}
              </select>
            </div>

            {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
            <div>
              <label className="block text-sm font-medium text-dark-300 mb-2">
                –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
              </label>
              <select
                value={filters.ordering}
                onChange={(e) => handleFilterChange('ordering', e.target.value)}
                className="w-full px-3 py-2 bg-dark-700 border border-dark-600 rounded-lg text-white focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
              >
                <option value="-created_at">–ù–æ–≤—ã–µ –ø–µ—Ä–≤—ã–µ</option>
                <option value="created_at">–°—Ç–∞—Ä—ã–µ –ø–µ—Ä–≤—ã–µ</option>
                <option value="title">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–ê-–Ø)</option>
                <option value="-title">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–Ø-–ê)</option>
                <option value="price">–¶–µ–Ω–∞ (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)</option>
                <option value="-price">–¶–µ–Ω–∞ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)</option>
                <option value="-rating">–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É</option>
              </select>
            </div>
          </div>

          {/* –ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∫–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ */}
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <Filter className="w-4 h-4 text-dark-400" />
              <span className="text-sm text-dark-400">
                –ù–∞–π–¥–µ–Ω–æ: {saleProducts.length} —Ç–æ–≤–∞—Ä–æ–≤
              </span>
            </div>

            {(filters.search || filters.category || filters.city || filters.country || filters.ordering !== '-created_at') && (
              <button
                onClick={handleResetFilters}
                className="flex items-center space-x-1 text-sm text-red-400 hover:text-red-300 transition-colors"
              >
                <X className="w-4 h-4" />
                <span>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</span>
              </button>
            )}
          </div>
        </motion.div>

        {/* –¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.3 }}
        >
            {saleProducts.length === 0 ? (
              <div className="text-center py-16">
                <Package className="w-16 h-16 text-dark-500 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-white mb-2">
                  –ü–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π
                </h3>
                <p className="text-dark-300">
                  –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ - —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!
                </p>
              </div>
            ) : (
              <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4">
                {saleProducts.map((product) => (
                  <motion.div
                    key={product.id}
                    whileHover={{ y: -5 }}
                    className="card group cursor-pointer"
                    onClick={() => handleProductClick(product.id)}
                  >
                    {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                    <div className="relative mb-4 rounded-lg overflow-hidden">
                      <img
                        src={product.image || '/api/placeholder/300/200'}
                        alt={product.title}
                        className="w-full h-32 sm:h-40 lg:h-32 xl:h-36 object-cover group-hover:scale-105 transition-transform duration-300"
                      />
                      <div className="absolute top-3 right-3">
                        <span className="bg-red-500 text-white px-2 py-1 rounded-full text-sm font-medium">
                          üî• –°–∫–∏–¥–∫–∞
                        </span>
                      </div>
                    </div>

                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                    <div className="flex-1">
                      <h3 className="text-sm lg:text-base font-semibold text-white mb-2 group-hover:text-primary-400 transition-colors line-clamp-2">
                        {product.title}
                      </h3>

                      <p className="text-dark-300 text-xs lg:text-sm mb-3 line-clamp-2">
                        {product.description}
                      </p>

                      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
                      {product.category && (
                        <div className="flex items-center text-dark-400 text-xs mb-2">
                          <Tag className="w-3 h-3 mr-1" />
                          <span className="truncate">{product.category.name}</span>
                        </div>
                      )}

                      {/* –¶–µ–Ω–∞ */}
                      <div className="mb-2">
                        <span className="text-lg lg:text-xl font-bold text-primary-400">
                          {product.price ? `${product.price} ${product.currency}` : '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è'}
                        </span>
                      </div>

                      {/* –ö–æ–º–ø–∞–Ω–∏—è */}
                      <div className="flex items-center justify-between">
                        <div className="flex items-center text-dark-300 min-w-0 flex-1">
                          <MapPin className="w-3 h-3 mr-1 flex-shrink-0" />
                          <span className="text-xs truncate">{product.company_name}</span>
                          {product.company_city && (
                            <span className="text-xs ml-1 flex-shrink-0">‚Ä¢ {product.company_city}</span>
                          )}
                        </div>
                        <ChevronRight className="w-4 h-4 text-dark-500 group-hover:text-primary-400 transition-colors flex-shrink-0" />
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            )}
        </motion.div>
      </div>
    </div>
  );
};

export default Actions;