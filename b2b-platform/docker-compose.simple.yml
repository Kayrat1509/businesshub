version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: b2b_postgres
    environment:
      POSTGRES_DB: b2b_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - b2b_network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: b2b_backend
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/b2b_platform
      - SECRET_KEY=your-secret-key-change-in-production-please
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - b2b_network
    restart: unless-stopped
    command: >
      sh -c "sleep 10 &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py seed_demo &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: b2b_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_USE_MOCK=false
    networks:
      - b2b_network
    restart: unless-stopped
    command: npm run dev

volumes:
  postgres_data:
  media_volume:

networks:
  b2b_network:
    driver: bridge